include "common"
play.application.loader = "graalvm.demo.CustomApplicationLoader"
play.modules.enabled += "graalvm.demo.modules.DemoModule"
play.http.filters = "graalvm.demo.Filters"
play.filters {
  enabled += "play.filters.cors.CORSFilter"
  cors {
    pathPrefixes = ["/"]
    allowedHttpMethods = ["POST", "GET", "PUT", "DELETE", "OPTIONS"]
    allowedHttpHeaders = ["Accept", "Authorization", "x-requested-with", "Accept-Language"]
  }
}

play.server {
  http.port = 9001
}

play.akka.actor-system = "Demo-Cluster"
play.http.secret.key = "changethissosomethingsecret"

akka {
  actor {
    default-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8
        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 4.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64
      }
      # Throughput defines the number of messages that are processed in a batch
      # before the thread is returned to the pool. Set to 1 for as fair as possible.
      throughput = 4
    }
  }
  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 7101
      send-buffer-size = 1024000b
      receive-buffer-size = 1024000b
      maximum-frame-size = 12m
    }
  }

  discovery {
    method = aggregate
    aggregate {
      // Try and resolve via DNS and fall back to configuration
      discovery-methods = ["akka-dns", "config"]
    }
    config {
      services {
        Demo-Cluster {
          endpoints = [
            {
              //Manager
              host = "127.0.0.1"
              port = 5101
            }
          ]
        }
      }
    }
  }

  management {
    cluster.bootstrap {
      // Use after initial deployment
      new-cluster-enabled = on
      contact-point-discovery {
        service-name = "Demo-Cluster"
        discovery-method = config
        interval = 2s
        required-contact-point-nr = 1
      }
    }
    http {
      hostname = "127.0.0.1"
      port = 5101
      bind-hostname = 0.0.0.0
      bind-port = 5101
    }
  }

  cluster {
    roles = [manager]
  }
}

mongo{
  #uri = "mongodb://kmtongji:9Nmg4rfBF55fgNGfbGBe3UFgf24Zx3@192.168.36.208:27017/admin?connectTimeoutMS=30000&wTimeoutMS=360000"
  uri = "mongodb://kmtongji:9Nmg4rfBF55fgNGfbGBe3UFgf24Zx3@z008.kmtongji.com:27017/admin?connectTimeoutMS=30000&wTimeoutMS=360000"
  db = "admin"
  table{
    name = "data_center"
    schemaNames = ["_id", "name"]
    schemaTypes = ["string", "string"]
    filterField = "name"
  }
}